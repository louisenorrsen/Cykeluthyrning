@page "/uthyrning"
@using Data;
@inject BikeService bikeService;

<h3 class="text-center">Uthyrning</h3>

@if (formSubmitted && !formIsValid)
{
    <div class="alert alert-danger" role="alert">
        Vänligen fyll i alla fält innan du fortsätter.
    </div>
}

<form>
    <div class="form-group mb-2">
        <label class="col-sm-3 fw-bold text-end" for="firstname">Förnamn:</label>
        <input class="col-sm-5" type="text" id="firstname" @bind="firstname" placeholder="Ange förnamn" />
    </div>
    <div class="mb-2">
        <label class="col-sm-3 fw-bold text-end" for="lastname">Efternamn:</label>
        <input class="col-sm-5" type="text" id="lastname" @bind="lastname" placeholder="Ange efternamn" />
    </div>
    <div class="mb-2">
        <label class="col-sm-3 fw-bold text-end" for="phone">Telefonnummer:</label>
        <input class="col-sm-5" type="text" id="phone" @bind="phone" placeholder="Ange telefonnummer" />
    </div>
    <div class="mb-2">
        <label class="col-sm-3 fw-bold text-end" for="customernumber">Kundnummer:</label>
        <input class="col-sm-5" type="text" id="customernumber" @bind="customernumber" placeholder="Ange kundnummer" />
    </div>
    <div class="d-flex justify-content-center">
        <select class="custom-select col-4 p-1" id="status" @bind="filterType" >
            @foreach (var type in Enum.GetValues(typeof(Enums.Type)))
            {
                <option value="@type">@type</option>
            }
        </select>
    </div>
    <div class="d-flex flex-wrap justify-content-center">
        @if (availableBikes.Any())
        {
            @foreach (var bike in availableBikes.Where(bike => bike.Type == filterType).OrderBy(b => b.Size))
            {

                <div class="card text-center d-flex" style="width: 18rem">
                    <img class="card-img-top m-auto mt-4" style="width: 16rem; height:8rem; object-fit:scale-down" src="@($"Assets/{bike.Type}.png")" alt="@($"{bike.Type}_cykel")">
                    <div class="card-body d-flex align-items-end justify-content-center">
                        <div class="d-flex flex-column">
                            <h5 class="card-title">Cyckelnummer: @bike.Id</h5>
                            <div class="card-text">
                                Typ: @bike.Type<br />
                                Storlek: @bike.Size tum
                            </div>
                            <div class="mt-3"><button class="btn btn-outline-success" type="button" @onclick="() => ValidateForm(bike)">Hyr ut</button></div>

                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert-danger p-3 m-4">Inga cyklar tillgängliga.</div>
        }
    </div>

</form>




@code {
    private List<Bike> bikes;
    private List<Bike> availableBikes => bikes.Where(bike => bike.Status == Enums.Status.Ledig).ToList();
    private bool formIsValid;
    private bool formSubmitted;
    private string firstname;
    private string lastname;
    private string customernumber;
    private string phone;
    private Enums.Type filterType;

    protected override void OnInitialized()
    {
        bikes = bikeService.GetBikes();
    }

    private void ValidateForm(Bike bike)
    {
        formSubmitted = true;

        if (string.IsNullOrEmpty(customernumber) || string.IsNullOrEmpty(firstname) || string.IsNullOrEmpty(lastname) || string.IsNullOrEmpty(phone))
        {
            formIsValid = false;
        }
        else
        {
            RentBike(bike);
        }
    }

    private void RentBike(Bike bike)
    {
        bikeService.RentBike(bike, customernumber, firstname, lastname, phone);
        customernumber = "";
        firstname = "";
        lastname = "";
        phone = "";
        formSubmitted = false;
    }
}
